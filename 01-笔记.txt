Ajax： 前后端交互

    服务器： 存放和对外提供资源的电脑
    客户端： 获取和消费资源的电脑

    URL：（唯一标识符） 统一资源定位符 -- 通信协议 服务器名称   具体的存放位置
    
    通信过程： 请求 —— 处理 —— 响应
    
    打开浏览器 —— ctrl + shift + i 快捷键 —— Network —— Doc —— 刷新页面
    
    服务器提供的资源： 
        文字 图片 音频 视频 数据（数据也是资源）
            数据是网页的灵魂
    
    HTML —— 是网页的骨架
    CSS —— 是网页的颜值
    JavaScript —— 是网页的行为
    数据 —— 是网页的灵魂

    网页中获取数据：
                只要是数据，必然有 请求 - 处理 - 响应的方式惊醒获取
                XMLHTTPRequest（简称 xhr）是浏览器提供的js成员，通过它，可以请求服务器上的数据资源
                var xmlahr  = new XMLHttpRequest();
            
    资源的请求方式：
                GET： 客户端从服务器获取资源（向服务器要资源）
                        URL地址 —— 从服务器获取Html文件，js文件
                POST： 客户端给服务器提交数据（往服务器发送资源）
                        登录 - 注册

Ajax：
    概念 : A JavaScript And XML
    AJAX 能让我们实现 网页与服务器之间的数据交互
        网页是 数据载体
        AJAX 负责和服务器之间的数据传输 （交互）
    
    应用场景：
        用户名检测 
        搜索提示
        数据分页显示： 
                1)根据页码来刷新数据
                2)数据的增删改查

    JQuery 中发起 Ajax的函数：
            $.get() —— 专门用来发起 get 请求，从服务器拿资源
            $.post() —— 专门用来发起 post 请求，从而向服务器提交数据
            $.ajax() —— 

        $.get():
            $.get(url,[data],[callback])
                string ： 
                Object ： 请求时携带的参数
                function : 请求成功时的回调函数

            不带参数的请求：
                直接提供 ：URL地址 和 回调函数 就行。
            带参数的请求：
                参数以 对象的形式来

        $.post(): 
            $.post(url,[data],[callback])
                url:  提交数据的地址
                data:  提交的数据（是一个对象）
                callback:  回调函数

        $.ajax(): 传递的是 一个对象
            $.ajax({
                type: GET 或 POST （字符串型）
                url:  路径
                data: 需要的数据
                success: 成功后返回的回调函数
            })

        接口：
            使用AJAX请求数据时，被请求的URL地址，就叫做数据接口
            PostMan:
                    GET - url - 参数 - send
                    POST - url - body - x-www-form-urlencoded - 参数 -send

            接口文档：
                    使用 Ajax 请求数据时，被请求的 URL 地址，就叫做 数据接口（简称接口）
                组成部分：
                        接口名称：用来表示各个接口的简单说明，如登录接口，
                        接口URL： 接口的调用地址
                        调用方式： GET 或 POST
                        参数格式：
                        响应格式： status: 200-成功 500-失败
                        返回实例：